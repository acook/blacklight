#!/usr/bin/env bash

source "$(dirname "$BASH_SOURCE")/lib/_shared.bash"
include "bl_env"

say "obtaining system prerequisites..."
run "apt install" sudo apt -y install git curl autoconf

say "obtaining ELLCC..."
safe_cd "$BL_EXT_PATH"
ELLCC_FILE=ellcc-x86_64-linux-2017-08-23.bz2
run_or_die "download" curl -O "http://ellcc.org/releases/latest/$ELLCC_FILE"
run_or_die "extract" tar xjf "$ELLCC_FILE"
run "cleanup" rm -v "$ELLCC_FILE"

say "patching ELLCC ELFs with current location of interpreter..."
safe_cd "$BL_EXT_PATH/ellcc/bin"
LIBC_SO="$BL_EXT_PATH/ellcc/libecc/lib/x86_64-linux/libc.so"
for elf in *; do
  if [[ -x $elf ]] && [[ ! -L $elf ]] && "file" $elf | "grep" -s -q "/rich/"; then
    run_or_die "patch \`$elf\`" patchelf --set-interpreter "$LIBC_SO" $elf
  fi
done

say "obtaining jemalloc..."
safe_cd "$BL_EXT_PATH"
run_or_die "clone" git clone --depth=5 https://github.com/jemalloc/jemalloc.git

say "building jemalloc..."
safe_cd "$BL_EXT_PATH/jemalloc"
run "cleanup" make relclean
echo -ne "ac_cv_func_secure_getenv=no\nac_cv_func_issetugid=no\n" > config.cache
run_or_die "configure" ./autogen.sh -C --prefix "$BL_LOCAL_PATH"
run_or_die "compile" make
run "install" make install

say "obtaining utf.h..."
safe_cd "$BL_EXT_PATH"
run_or_die "clone" git clone --depth=5 https://github.com/sheredom/utf8.h.git

if scriptsame; then
  ok "everything should be good to go!"
fi
