#!/usr/bin/env bash

set -o nounset

echo " -- ($(basename "$BASH_SOURCE") @ $(date "+%T")) setting up..."

EXECNAME="$(basename "$0")"
THISPATH="$(readlink -f "$BASH_SOURCE")"
THISNAME="$(basename "$THISPATH")"
THIS_DIR="$(dirname "$THISPATH")"
THIS_EXE="$(basename "$THIS_DIR")/$THISNAME"
ROOT_DIR="$(readlink -f "$THIS_DIR/..")"

ts()   { date "+%Y.%m.%d %T"; }
say()  { echo -ne " -- ($THIS_EXE @ $(ts)) : $1\n"; }
warn() { say "$@" >&2; }
ok()   { say "(ok) $*"; exit 0; }
die()  { warn "(die) $*"; exit 1; }
nocd() { die "couldn't cd! $1"; }
run()  { say "$1 command: \`$2\`"; eval "$2"; }

cd "$ROOT_DIR" || nocd "$ROOT_DIR"

mkdir -v -p ext/local/bin ext/local/include
cd ext

say "installing deps from apt..."
sudo apt -y install cppcheck splint pip

say "installing deps from pip..."
sudo pip install --upgrade pip
sudo pip install flawfinder

say "obtaining ELLCC..."
ELLCC_FILE=ellcc-x86_64-linux-2017-08-23.bz2
curl -O "http://ellcc.org/releases/latest/$ELLCC_FILE"
tar xvjf "$ELLCC_FILE"
rm -v "$ELLCC_FILE"
ls -o

export PATH="$PWD/ellcc/bin:$PWD/local/bin:$PATH"
export CC="ecc"
export CLINKER="ecc"

say "obtaining jemalloc..."
git clone https://github.com/jemalloc/jemalloc.git

say "building jemalloc..."
make relclean
echo -ne "ac_cv_func_secure_getenv=no\nac_cv_func_issetugid=no\n" > config.cache
./autogen.sh -C --prefix "$PWD/local"
make
make install

say "obtaining infer..."
warn "TODO"
say "building infer..."
warn "TODO"

